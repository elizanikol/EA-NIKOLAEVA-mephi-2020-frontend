{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethnikolaeva/WebstormProjects/frontend/src/components/create_poll/CreatePoll.jsx\";\nimport React from 'react';\nimport { Field, FieldArray, reduxForm } from 'redux-form';\nimport validate from './validate';\n\nconst renderField = ({\n  input,\n  label,\n  type,\n  meta: {\n    touched,\n    error\n  }\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }\n}, label), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n  type: type,\n  placeholder: label,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }\n})), touched && error && /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 34\n  }\n}, error)));\n\nconst renderMembers = ({\n  fields\n}) => /*#__PURE__*/React.createElement(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  onClick: () => fields.push({}),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }\n}, \"Add Member\")), fields.map((member, index) => /*#__PURE__*/React.createElement(\"li\", {\n  key: index,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  title: \"Remove Member\",\n  onClick: () => fields.remove(index),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 17\n  }\n}, \"Member #\", index + 1), /*#__PURE__*/React.createElement(Field, {\n  name: `${member}.firstName`,\n  type: \"text\",\n  component: renderField,\n  label: \"First Name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(Field, {\n  name: `${member}.lastName`,\n  type: \"text\",\n  component: renderField,\n  label: \"Last Name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(FieldArray, {\n  name: `${member}.hobbies`,\n  component: renderHobbies,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 17\n  }\n}))));\n\nconst renderHobbies = ({\n  fields,\n  meta: {\n    error\n  }\n}) => /*#__PURE__*/React.createElement(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  onClick: () => fields.push(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 13\n  }\n}, \"Add Hobby\")), fields.map((hobby, index) => /*#__PURE__*/React.createElement(\"li\", {\n  key: index,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  title: \"Remove Hobby\",\n  onClick: () => fields.remove(index),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(Field, {\n  name: hobby,\n  type: \"text\",\n  component: renderField,\n  label: `Hobby #${index + 1}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 17\n  }\n}))), error && /*#__PURE__*/React.createElement(\"li\", {\n  className: \"error\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 19\n  }\n}, error));\n\nconst FieldArraysForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"clubName\",\n    type: \"text\",\n    component: renderField,\n    label: \"Club Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"members\",\n    component: renderMembers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: submitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Clear Values\")));\n};\n\nexport default reduxForm({\n  form: 'fieldArrays',\n  // a unique identifier for this form\n  validate\n})(FieldArraysForm);\n/*import React, {Component} from \"react\";\nimport AddOption from \"../containers/Option\";\n\nclass CreatePoll extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            poll_name: \"\",\n            question: \"\",\n            option: \"\"\n        };\n    }\n\n    handleChange = event => {\n        const {name, value} = event.target;\n        this.setState({ [name]: event.target.value });\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <h2>New Poll</h2>\n                    <input type=\"text\" class =\"poll_box\" placeholder=\"Enter a poll name\" name='poll_name' value={this.state.poll_name} onChange={this.handleChange}/>\n                    <br/>\n                    <input type=\"text\" className=\"poll_box\" placeholder=\"Enter a question\" name='question' value={this.state.question} onChange={this.handleChange}/>\n\n                    <br/>\n                    <input type=\"text\" className=\"poll_box\" placeholder=\"Add option\" name='option' value={this.state.option} onChange={this.handleChange}/>\n                    <br/>\n                    <AddOption />\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default CreatePoll;*/","map":{"version":3,"sources":["/Users/elizabethnikolaeva/WebstormProjects/frontend/src/components/create_poll/CreatePoll.jsx"],"names":["React","Field","FieldArray","reduxForm","validate","renderField","input","label","type","meta","touched","error","renderMembers","fields","push","map","member","index","remove","renderHobbies","hobby","FieldArraysForm","props","handleSubmit","pristine","reset","submitting","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, FieldArray, reduxForm } from 'redux-form'\nimport validate from './validate'\n\n\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input {...input} type={type} placeholder={label}/>\n            {touched && error && <span>{error}</span>}\n        </div>\n    </div>\n)\n\nconst renderMembers = ({ fields }) => (\n    <ul>\n        <li>\n            <button type=\"button\" onClick={() => fields.push({})}>Add Member</button>\n        </li>\n        {fields.map((member, index) =>\n            <li key={index}>\n                <button\n                    type=\"button\"\n                    title=\"Remove Member\"\n                    onClick={() => fields.remove(index)}/>\n                <h4>Member #{index + 1}</h4>\n                <Field\n                    name={`${member}.firstName`}\n                    type=\"text\"\n                    component={renderField}\n                    label=\"First Name\"/>\n                <Field\n                    name={`${member}.lastName`}\n                    type=\"text\"\n                    component={renderField}\n                    label=\"Last Name\"/>\n                <FieldArray name={`${member}.hobbies`} component={renderHobbies}/>\n            </li>\n        )}\n    </ul>\n)\n\nconst renderHobbies = ({ fields, meta: { error } }) => (\n    <ul>\n        <li>\n            <button type=\"button\" onClick={() => fields.push()}>Add Hobby</button>\n        </li>\n        {fields.map((hobby, index) =>\n            <li key={index}>\n                <button\n                    type=\"button\"\n                    title=\"Remove Hobby\"\n                    onClick={() => fields.remove(index)}/>\n                <Field\n                    name={hobby}\n                    type=\"text\"\n                    component={renderField}\n                    label={`Hobby #${index + 1}`}/>\n            </li>\n        )}\n        {error && <li className=\"error\">{error}</li>}\n    </ul>\n)\n\nconst FieldArraysForm = (props) => {\n    const { handleSubmit, pristine, reset, submitting } = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <Field name=\"clubName\" type=\"text\" component={renderField} label=\"Club Name\"/>\n            <FieldArray name=\"members\" component={renderMembers}/>\n            <div>\n                <button type=\"submit\" disabled={submitting}>Submit</button>\n                <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'fieldArrays',     // a unique identifier for this form\n    validate\n})(FieldArraysForm)\n\n/*import React, {Component} from \"react\";\nimport AddOption from \"../containers/Option\";\n\nclass CreatePoll extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            poll_name: \"\",\n            question: \"\",\n            option: \"\"\n        };\n    }\n\n    handleChange = event => {\n        const {name, value} = event.target;\n        this.setState({ [name]: event.target.value });\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <h2>New Poll</h2>\n                    <input type=\"text\" class =\"poll_box\" placeholder=\"Enter a poll name\" name='poll_name' value={this.state.poll_name} onChange={this.handleChange}/>\n                    <br/>\n                    <input type=\"text\" className=\"poll_box\" placeholder=\"Enter a question\" name='question' value={this.state.question} onChange={this.handleChange}/>\n\n                    <br/>\n                    <input type=\"text\" className=\"poll_box\" placeholder=\"Add option\" name='option' value={this.state.option} onChange={this.handleChange}/>\n                    <br/>\n                    <AddOption />\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default CreatePoll;*/\n"]},"metadata":{},"sourceType":"module"}