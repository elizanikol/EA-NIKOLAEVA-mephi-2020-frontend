{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethnikolaeva/WebstormProjects/frontend/src/components/forms/LoginForm.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nconst required = value => value || typeof value === 'number' ? undefined : 'Required';\n\nconst SimpleForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"name\",\n    component: \"input\",\n    type: \"text\",\n    placeholder: \"First Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"email\",\n    component: \"input\",\n    type: \"email\",\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"password\",\n    component: \"input\",\n    type: \"password\",\n    placeholder: \"Password\",\n    validate: [required, minLength8],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"password\",\n    component: \"input\",\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: pristine || submitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Clear Values\")));\n};\n\nexport default reduxForm({\n  form: 'simple' // a unique identifier for this form\n\n})(SimpleForm);\n/*import React, { Component } from \"react\";\nimport Button from '../buttons/Button'\nimport {NavLink} from \"react-router-dom\";\n\nconst validate = (state) => {\n    return (state.email.length > 0 && state.password.length >= 6);\n};\n\nclass Login extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n\n            errors: {\n                email: '',\n                password: '',\n            }\n        };\n    }\n\n    handleChange = event => {\n        const {name, value} = event.target;\n        const errors = this.state.errors;\n        const validEmailRegex = RegExp(/(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([\\t]*\\r\\n)?[\\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([\\t]*\\r\\n)?[\\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i);\n\n        switch (name) {\n            case 'email':\n                errors.email = validEmailRegex.test(value) ? '' : <strong>Email is not valid!</strong>;\n                break;\n\n            case 'password':\n                errors.password = (value.length < 6) ? <strong>Your password must be at least 6 characters long!</strong> : '';\n                break;\n\n            default:\n                break;\n        }\n\n        this.setState({ errors, [name]: event.target.value });\n    };\n\n    render() {\n        const isDisabled = !validate(this.state);\n\n        return (\n            <form>\n                <h2>Login</h2>\n\n                <input type=\"text\" class =\"box\" placeholder=\"Enter a valid email\" name = 'email' value={this.state.email} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.email}</div>\n\n                <br/>\n                <input type=\"password\" class =\"box\" placeholder=\"Enter password\" name = 'password' value={this.state.password} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.password}</div>\n\n                <br/>\n                <NavLink to=\"/home\"><Button disabled={isDisabled}>Login</Button></NavLink>\n            </form>\n        );\n    }\n}\n\nexport default Login;*/","map":{"version":3,"sources":["/Users/elizabethnikolaeva/WebstormProjects/frontend/src/components/forms/LoginForm.jsx"],"names":["React","Field","reduxForm","required","value","undefined","SimpleForm","props","handleSubmit","pristine","reset","submitting","minLength8","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nconst required = value => (value || typeof value === 'number' ? undefined : 'Required')\n\nconst SimpleForm = props => {\n    const { handleSubmit, pristine, reset, submitting } = props;\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <label>Name</label>\n                <div>\n                    <Field\n                        name=\"name\"\n                        component=\"input\"\n                        type=\"text\"\n                        placeholder=\"First Name\"\n                    />\n                </div>\n            </div>\n            <div>\n                <label>Email</label>\n                <div>\n                    <Field\n                        name=\"email\"\n                        component=\"input\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                    />\n                </div>\n            </div>\n            <div>\n                <label>Password</label>\n                <div>\n                    <Field\n                        name=\"password\"\n                        component=\"input\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        validate={[required, minLength8]}\n                    />\n                </div>\n            </div>\n            <div>\n                <label>Password</label>\n                <div>\n                    <Field\n                        name=\"password\"\n                        component=\"input\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                    />\n                </div>\n            </div>\n            <div>\n                <button type=\"submit\" disabled={pristine || submitting}>Submit</button>\n                <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n                    Clear Values\n                </button>\n            </div>\n        </form>\n    );\n};\n\nexport default reduxForm({\n    form: 'simple', // a unique identifier for this form\n})(SimpleForm);\n\n\n/*import React, { Component } from \"react\";\nimport Button from '../buttons/Button'\nimport {NavLink} from \"react-router-dom\";\n\nconst validate = (state) => {\n    return (state.email.length > 0 && state.password.length >= 6);\n};\n\nclass Login extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n\n            errors: {\n                email: '',\n                password: '',\n            }\n        };\n    }\n\n    handleChange = event => {\n        const {name, value} = event.target;\n        const errors = this.state.errors;\n        const validEmailRegex = RegExp(/(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([\\t]*\\r\\n)?[\\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([\\t]*\\r\\n)?[\\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i);\n\n        switch (name) {\n            case 'email':\n                errors.email = validEmailRegex.test(value) ? '' : <strong>Email is not valid!</strong>;\n                break;\n\n            case 'password':\n                errors.password = (value.length < 6) ? <strong>Your password must be at least 6 characters long!</strong> : '';\n                break;\n\n            default:\n                break;\n        }\n\n        this.setState({ errors, [name]: event.target.value });\n    };\n\n    render() {\n        const isDisabled = !validate(this.state);\n\n        return (\n            <form>\n                <h2>Login</h2>\n\n                <input type=\"text\" class =\"box\" placeholder=\"Enter a valid email\" name = 'email' value={this.state.email} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.email}</div>\n\n                <br/>\n                <input type=\"password\" class =\"box\" placeholder=\"Enter password\" name = 'password' value={this.state.password} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.password}</div>\n\n                <br/>\n                <NavLink to=\"/home\"><Button disabled={isDisabled}>Login</Button></NavLink>\n            </form>\n        );\n    }\n}\n\nexport default Login;*/\n\n\n\n"]},"metadata":{},"sourceType":"module"}