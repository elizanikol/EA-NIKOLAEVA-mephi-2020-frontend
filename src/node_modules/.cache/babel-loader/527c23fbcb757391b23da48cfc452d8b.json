{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethnikolaeva/WebstormProjects/frontend/src/components/forms/PollForm.jsx\";\nimport React from 'react';\nimport { Field, FieldArray, reduxForm } from 'redux-form';\nimport { renderField } from './FormValidation';\n\nconst renderQuestions = ({\n  fields\n}) => /*#__PURE__*/React.createElement(\"ul\", {\n  className: \"d-flex flex-column\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  class: \"btn btn-outline-info\",\n  onClick: () => fields.push({}),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 13\n  }\n}, \"Add Question\")), fields.map((question, index) => /*#__PURE__*/React.createElement(\"li\", {\n  key: index,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  class: \"btn btn-outline-info\",\n  title: \"Remove Question\",\n  onClick: () => fields.remove(index),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 17\n  }\n}, \"Question \", index + 1), /*#__PURE__*/React.createElement(Field, {\n  name: `${question}.questionName`,\n  type: \"text\",\n  component: renderField,\n  placeholder: \"Question Name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(FieldArray, {\n  name: `${question}.options`,\n  component: renderOptions,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 17\n  }\n}))));\n\nconst renderOptions = ({\n  fields\n}) => /*#__PURE__*/React.createElement(\"ul\", {\n  className: \"d-flex flex-column\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  class: \"btn btn-outline-info\",\n  onClick: () => fields.push(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }\n}, \"Add Option\")), fields.map((option, index) => /*#__PURE__*/React.createElement(\"li\", {\n  key: index,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  class: \"btn btn-outline-info\",\n  title: \"Remove Option\",\n  onClick: () => fields.remove(index),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(Field, {\n  name: option,\n  type: \"text\",\n  component: renderField,\n  placeholder: `Option #${index + 1}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 17\n  }\n}))), fields.error && /*#__PURE__*/React.createElement(\"li\", {\n  className: \"error\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 26\n  }\n}, fields.error));\n\nconst PollForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    class: \"d-flex flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group d-flex flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"Enter your Poll name:\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"Poll\",\n    type: \"text\",\n    component: renderField,\n    placeholder: \"Poll Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group d-flex flex-column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"questions\",\n    component: renderQuestions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-around\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\",\n    disabled: submitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn btn-outline-success\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, \"Clear Values\")));\n};\n\nexport default reduxForm({\n  form: 'LoginForm'\n})(PollForm);","map":{"version":3,"sources":["/Users/elizabethnikolaeva/WebstormProjects/frontend/src/components/forms/PollForm.jsx"],"names":["React","Field","FieldArray","reduxForm","renderField","renderQuestions","fields","push","map","question","index","remove","renderOptions","option","error","PollForm","props","handleSubmit","pristine","reset","submitting","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Field, FieldArray, reduxForm} from 'redux-form'\nimport { renderField } from './FormValidation'\n\nconst renderQuestions = ({ fields }) => (\n    <ul className=\"d-flex flex-column\">\n        <li>\n            <button type=\"button\" class = \"btn btn-outline-info\" onClick={() => fields.push({})}>Add Question</button>\n        </li>\n        {fields.map((question, index) =>\n            <li key={index}>\n                <button\n                    type=\"button\" class = \"btn btn-outline-info\"\n                    title=\"Remove Question\"\n                    onClick={() => fields.remove(index)}/>\n                <h4>Question {index + 1}</h4>\n                <Field\n                    name={`${question}.questionName`}\n                    type=\"text\"\n                    component={renderField}\n                    placeholder=\"Question Name\"/>\n                <FieldArray name={`${question}.options`} component={renderOptions}/>\n            </li>\n        )}\n    </ul>\n)\n\nconst renderOptions = ({ fields }) => (\n    <ul className=\"d-flex flex-column\">\n    <br/>\n        <li>\n            <button type=\"button\" class = \"btn btn-outline-info\" onClick={() => fields.push()}>Add Option</button>\n        </li>\n        {fields.map((option, index) =>\n            <li key={index}>\n                <button\n                    type=\"button\" class = \"btn btn-outline-info\"\n                    title=\"Remove Option\"\n                    onClick={() => fields.remove(index)}/>\n                <Field\n                    name={option}\n                    type=\"text\"\n                    component={renderField}\n                    placeholder={`Option #${index + 1}`}/>\n            </li>\n        )}\n        {fields.error && <li className=\"error\">{fields.error}</li>}\n    </ul>\n)\n\nconst PollForm = (props) => {\n    const { handleSubmit, pristine, reset, submitting } = props\n    return (\n        <form onSubmit={handleSubmit} class=\"d-flex flex-column\">\n            <div className=\"form-group d-flex flex-column\">\n            <br/>\n                <h4>Enter your Poll name:</h4>\n            <Field name=\"Poll\" type=\"text\" component={renderField} placeholder=\"Poll Name\"/>\n            </div>\n            <div className=\"form-group d-flex flex-column\">\n            <FieldArray name=\"questions\" component={renderQuestions}/>\n            </div>\n            <div className=\"d-flex justify-content-around\">\n                <button type=\"submit\" class=\"btn btn-primary\" disabled={submitting}>Submit</button>\n                <button type=\"button\" class=\"btn btn-outline-success\" disabled={pristine || submitting} onClick={reset}>Clear Values</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'LoginForm',\n})(PollForm);\n"]},"metadata":{},"sourceType":"module"}