{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethnikolaeva/WebstormProjects/frontend/src/components/forms/LoginForm.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nconst required = value => value ? undefined : 'Required';\n\nconst minLength = min => value => value && value.length < min ? `Must be ${min} characters or more` : undefined;\n\nconst minLength8 = minLength(8);\n\nconst renderField = ({\n  input,\n  label,\n  type,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"label\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }\n}, label), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n  placeholder: label,\n  type: type,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }\n})), touched && (error && /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 36\n  }\n}, error) || warning && /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 73\n  }\n}, warning))));\n\nconst SimpleForm = props => {\n  const {\n    error,\n    handleSubmit,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"username\",\n    type: \"text\",\n    component: renderField,\n    label: \"Username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    component: renderField,\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    component: renderField,\n    label: \"Password\",\n    validate: [required, minLength8],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }), error && /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: submitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Clear Values\")));\n};\n\nexport default reduxForm({\n  form: 'simple'\n})(SimpleForm);\n/*import React, { Component } from \"react\";\nimport Button from '../buttons/Button'\nimport {NavLink} from \"react-router-dom\";\n\nconst validate = (state) => {\n    return (state.email.length > 0 && state.password.length >= 6);\n};\n\nclass Login extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n\n            errors: {\n                email: '',\n                password: '',\n            }\n        };\n    }\n\n    handleChange = event => {\n        const {name, value} = event.target;\n        const errors = this.state.errors;\n        const validEmailRegex = RegExp(/(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([\\t]*\\r\\n)?[\\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([\\t]*\\r\\n)?[\\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i);\n\n        switch (name) {\n            case 'email':\n                errors.email = validEmailRegex.test(value) ? '' : <strong>Email is not valid!</strong>;\n                break;\n\n            case 'password':\n                errors.password = (value.length < 6) ? <strong>Your password must be at least 6 characters long!</strong> : '';\n                break;\n\n            default:\n                break;\n        }\n\n        this.setState({ errors, [name]: event.target.value });\n    };\n\n    render() {\n        const isDisabled = !validate(this.state);\n\n        return (\n            <form>\n                <h2>Login</h2>\n\n                <input type=\"text\" class =\"box\" placeholder=\"Enter a valid email\" name = 'email' value={this.state.email} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.email}</div>\n\n                <br/>\n                <input type=\"password\" class =\"box\" placeholder=\"Enter password\" name = 'password' value={this.state.password} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.password}</div>\n\n                <br/>\n                <NavLink to=\"/home\"><Button disabled={isDisabled}>Login</Button></NavLink>\n            </form>\n        );\n    }\n}\n\nexport default Login;*/","map":{"version":3,"sources":["/Users/elizabethnikolaeva/WebstormProjects/frontend/src/components/forms/LoginForm.jsx"],"names":["React","Field","reduxForm","required","value","undefined","minLength","min","length","minLength8","renderField","input","label","type","meta","touched","error","warning","SimpleForm","props","handleSubmit","pristine","reset","submitting","form"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\n\nconst required = value => value ? undefined : 'Required'\n\nconst minLength = min => value =>\n    value && value.length < min ? `Must be ${min} characters or more` : undefined\nconst minLength8 = minLength(8)\n\nconst renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\n    <div>\n        <label>{label}</label>\n        <div>\n            <input {...input} placeholder={label} type={type}/>\n            {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\n        </div>\n    </div>\n)\n\nconst SimpleForm = (props) => {\n    const { error, handleSubmit, pristine, reset, submitting } = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <Field name=\"username\" type=\"text\"\n                   component={renderField} label=\"Username\"\n            />\n            <Field name=\"email\" type=\"email\"\n                   component={renderField} label=\"Email\"\n            />\n            <Field name=\"password\" type=\"password\"\n                   component={renderField} label=\"Password\"\n                   validate={[ required, minLength8 ]}\n            />\n            {error && <strong>{error}</strong>}\n            <div>\n                <button type=\"submit\" disabled={submitting}>Submit</button>\n                <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'simple',\n})(SimpleForm);\n\n\n\n/*import React, { Component } from \"react\";\nimport Button from '../buttons/Button'\nimport {NavLink} from \"react-router-dom\";\n\nconst validate = (state) => {\n    return (state.email.length > 0 && state.password.length >= 6);\n};\n\nclass Login extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n\n            errors: {\n                email: '',\n                password: '',\n            }\n        };\n    }\n\n    handleChange = event => {\n        const {name, value} = event.target;\n        const errors = this.state.errors;\n        const validEmailRegex = RegExp(/(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([\\t]*\\r\\n)?[\\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([\\t]*\\r\\n)?[\\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i);\n\n        switch (name) {\n            case 'email':\n                errors.email = validEmailRegex.test(value) ? '' : <strong>Email is not valid!</strong>;\n                break;\n\n            case 'password':\n                errors.password = (value.length < 6) ? <strong>Your password must be at least 6 characters long!</strong> : '';\n                break;\n\n            default:\n                break;\n        }\n\n        this.setState({ errors, [name]: event.target.value });\n    };\n\n    render() {\n        const isDisabled = !validate(this.state);\n\n        return (\n            <form>\n                <h2>Login</h2>\n\n                <input type=\"text\" class =\"box\" placeholder=\"Enter a valid email\" name = 'email' value={this.state.email} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.email}</div>\n\n                <br/>\n                <input type=\"password\" class =\"box\" placeholder=\"Enter password\" name = 'password' value={this.state.password} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.password}</div>\n\n                <br/>\n                <NavLink to=\"/home\"><Button disabled={isDisabled}>Login</Button></NavLink>\n            </form>\n        );\n    }\n}\n\nexport default Login;*/\n\n\n\n"]},"metadata":{},"sourceType":"module"}