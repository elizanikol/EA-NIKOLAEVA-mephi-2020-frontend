{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethnikolaeva/WebstormProjects/frontend/src/components/forms/SignUpForm.jsx\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { email, required, renderField, minLength8, passwordsMustMatch } from './FormValidation';\nimport { NavLink } from \"react-router-dom\";\n\nconst SignUpForm = props => {\n  const {\n    invalid,\n    handleSubmit,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"username\",\n    type: \"text\",\n    component: renderField,\n    label: \"Username\",\n    validate: required,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"email\",\n    type: \"email\",\n    component: renderField,\n    label: \"Email\",\n    validate: [required, email],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"password\",\n    type: \"password\",\n    component: renderField,\n    label: \"Password\",\n    validate: [required, minLength8],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Field, {\n    name: \"passwordConfirmation\",\n    type: \"password\",\n    component: renderField,\n    label: \"Confirm password\",\n    validate: [required, passwordsMustMatch],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: invalid || pristine || submitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 37\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"Clear Values\")));\n};\n\nexport default reduxForm({\n  form: 'SignUpForm'\n})(SignUpForm);\n/*import React, {Component} from \"react\";\nimport Button from \"../buttons/Button\";\nimport {NavLink} from \"react-router-dom\";\n\nconst validate = (state) => {\n    return (state.email.length > 0 && state.password.length >= 6);\n};\n\nclass SignUpForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\",\n\n            errors: {\n                username: '',\n                email: '',\n                password: '',\n                password2: ''\n            }\n        };\n    }\n\n    handleChange = event => {\n        const {name, value} = event.target;\n        const {password, password2, errors} = this.state;\n        const validEmailRegex = RegExp(/(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([\\t]*\\r\\n)?[\\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([\\t]*\\r\\n)?[\\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i);\n        const validUsername = RegExp(/[а-яё]/i);\n\n        switch (name) {\n            case 'username':\n                errors.username = validUsername.test(value) ? '' : <strong>Your name must be in cyrillic!</strong>;\n                break;\n\n            case 'email':\n                errors.email = validEmailRegex.test(value) ? '' : <strong>Email is not valid!</strong>;\n                break;\n\n            case 'password':\n                errors.password = (value.length < 6) ? <strong>Your password must be at least 6 characters long!</strong> : '';\n                break;\n\n            case 'password2':\n                errors.password2 = (value !== password) ? <strong>Passwords do not match!</strong> : '';\n                break;\n\n            default:\n                break;\n        }\n\n        this.setState({ errors, [name]: event.target.value });\n    };\n\n    render() {\n        const isDisabled = !validate(this.state);\n\n        return (\n            <form>\n                <h2>Sign up</h2>\n\n                <input type=\"text\" class =\"box\" placeholder=\"Enter your name\" name = 'username' value={this.state.username} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.username}</div>\n\n                <br/>\n                <input type=\"text\" class =\"box\" placeholder=\"Enter a valid email\" name = 'email' value={this.state.email} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.email}</div>\n\n                <br/>\n                <input type=\"password\" class =\"box\" placeholder=\"Enter password\" name = 'password' value={this.state.password} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.password}</div>\n\n                <br/>\n                <input type=\"password\" class =\"box\" placeholder=\"Confirm password\" name = 'password2' value={this.state.password2} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.password2}</div>\n\n                <br/>\n                <NavLink to=\"/home\"><Button disabled={isDisabled}>Sign up</Button></NavLink>\n            </form>\n        );\n    }\n}\n\nexport default SignUpForm;*/","map":{"version":3,"sources":["/Users/elizabethnikolaeva/WebstormProjects/frontend/src/components/forms/SignUpForm.jsx"],"names":["React","Field","reduxForm","email","required","renderField","minLength8","passwordsMustMatch","NavLink","SignUpForm","props","invalid","handleSubmit","pristine","reset","submitting","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAAQC,KAAR,EAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,UAAtC,EAAkDC,kBAAlD,QAA4E,kBAA5E;AACA,SAAQC,OAAR,QAAsB,kBAAtB;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA,QAAzB;AAAmCC,IAAAA,KAAnC;AAA0CC,IAAAA;AAA1C,MAAyDL,KAA/D;AACA,sBACI;AAAM,IAAA,QAAQ,EAAEE,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,MAA5B;AACO,IAAA,SAAS,EAAEP,WADlB;AAC+B,IAAA,KAAK,EAAC,UADrC;AAEO,IAAA,QAAQ,EAAED,QAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AACO,IAAA,SAAS,EAAEC,WADlB;AAC+B,IAAA,KAAK,EAAC,OADrC;AAEO,IAAA,QAAQ,EAAE,CAAED,QAAF,EAAYD,KAAZ,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eASI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AACO,IAAA,SAAS,EAAEE,WADlB;AAC+B,IAAA,KAAK,EAAC,UADrC;AAEO,IAAA,QAAQ,EAAE,CAAED,QAAF,EAAYE,UAAZ,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAaI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,sBAAZ;AAAmC,IAAA,IAAI,EAAC,UAAxC;AACO,IAAA,SAAS,EAAED,WADlB;AAC+B,IAAA,KAAK,EAAC,kBADrC;AAEO,IAAA,QAAQ,EAAE,CAACD,QAAD,EAAWG,kBAAX,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAoB;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEI,OAAO,IAAIE,QAAX,IAAuBE,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAApB,CADJ,eAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEF,QAAQ,IAAIE,UAA5C;AAAwD,IAAA,OAAO,EAAED,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CAjBJ,CADJ;AAwBH,CA1BD;;AA4BA,eAAeZ,SAAS,CAAC;AACrBc,EAAAA,IAAI,EAAE;AADe,CAAD,CAAT,CAEZP,UAFY,CAAf;AAKA","sourcesContent":["import React from 'react'\nimport { Field, reduxForm } from 'redux-form'\nimport {email, required, renderField, minLength8, passwordsMustMatch } from './FormValidation'\nimport {NavLink} from \"react-router-dom\"\n\nconst SignUpForm = (props) => {\n    const { invalid, handleSubmit, pristine, reset, submitting } = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <Field name=\"username\" type=\"text\"\n                   component={renderField} label=\"Username\"\n                   validate={required}\n            />\n            <Field name=\"email\" type=\"email\"\n                   component={renderField} label=\"Email\"\n                   validate={[ required, email]}\n            />\n            <Field name=\"password\" type=\"password\"\n                   component={renderField} label=\"Password\"\n                   validate={[ required, minLength8 ]}\n            />\n            <Field name=\"passwordConfirmation\" type=\"password\"\n                   component={renderField} label=\"Confirm password\"\n                   validate={[required, passwordsMustMatch]}\n            />\n            <div>\n                <NavLink to=\"/home\"><button type=\"submit\" disabled={invalid || pristine || submitting}>Submit</button></NavLink>\n                <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'SignUpForm',\n})(SignUpForm);\n\n\n/*import React, {Component} from \"react\";\nimport Button from \"../buttons/Button\";\nimport {NavLink} from \"react-router-dom\";\n\nconst validate = (state) => {\n    return (state.email.length > 0 && state.password.length >= 6);\n};\n\nclass SignUpForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            password2: \"\",\n\n            errors: {\n                username: '',\n                email: '',\n                password: '',\n                password2: ''\n            }\n        };\n    }\n\n    handleChange = event => {\n        const {name, value} = event.target;\n        const {password, password2, errors} = this.state;\n        const validEmailRegex = RegExp(/(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([\\t]*\\r\\n)?[\\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([\\t]*\\r\\n)?[\\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i);\n        const validUsername = RegExp(/[а-яё]/i);\n\n        switch (name) {\n            case 'username':\n                errors.username = validUsername.test(value) ? '' : <strong>Your name must be in cyrillic!</strong>;\n                break;\n\n            case 'email':\n                errors.email = validEmailRegex.test(value) ? '' : <strong>Email is not valid!</strong>;\n                break;\n\n            case 'password':\n                errors.password = (value.length < 6) ? <strong>Your password must be at least 6 characters long!</strong> : '';\n                break;\n\n            case 'password2':\n                errors.password2 = (value !== password) ? <strong>Passwords do not match!</strong> : '';\n                break;\n\n            default:\n                break;\n        }\n\n        this.setState({ errors, [name]: event.target.value });\n    };\n\n    render() {\n        const isDisabled = !validate(this.state);\n\n        return (\n            <form>\n                <h2>Sign up</h2>\n\n                <input type=\"text\" class =\"box\" placeholder=\"Enter your name\" name = 'username' value={this.state.username} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.username}</div>\n\n                <br/>\n                <input type=\"text\" class =\"box\" placeholder=\"Enter a valid email\" name = 'email' value={this.state.email} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.email}</div>\n\n                <br/>\n                <input type=\"password\" class =\"box\" placeholder=\"Enter password\" name = 'password' value={this.state.password} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.password}</div>\n\n                <br/>\n                <input type=\"password\" class =\"box\" placeholder=\"Confirm password\" name = 'password2' value={this.state.password2} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.password2}</div>\n\n                <br/>\n                <NavLink to=\"/home\"><Button disabled={isDisabled}>Sign up</Button></NavLink>\n            </form>\n        );\n    }\n}\n\nexport default SignUpForm;*/\n"]},"metadata":{},"sourceType":"module"}