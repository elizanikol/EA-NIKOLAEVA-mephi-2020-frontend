{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethnikolaeva/WebstormProjects/frontend/src/components/forms/PollForm.jsx\";\nimport React from 'react';\nimport { Field, FieldArray, reduxForm } from 'redux-form';\nimport { email, required, renderField, minLength8 } from './FormValidation';\nimport CreatePoll from \"../create_poll/CreatePoll\";\nimport { NavLink } from \"react-router-dom\";\n/*const LoginForm = (props) => {\n    const { invalid, handleSubmit, pristine, reset, submitting } = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <Field name=\"email\" type=\"email\"\n                   component={renderField} label=\"Email\"\n                   validate={[ required, email]}\n            />\n            <Field name=\"password\" type=\"password\"\n                   component={renderField} label=\"Password\"\n                   validate={[ required, minLength8 ]}\n            />\n            <div>\n                <button type=\"submit\" disabled={invalid || pristine || submitting}>Submit</button>\n                <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values</button>\n            </div>\n        </form>\n    )\n}*/\n\nconst renderQuestions = ({\n  fields\n}) => /*#__PURE__*/React.createElement(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  onClick: () => fields.push({}),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }\n}, \"Add Question\")), fields.map((question, index) => /*#__PURE__*/React.createElement(\"li\", {\n  key: index,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  title: \"Remove Question\",\n  onClick: () => fields.remove(index),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 17\n  }\n}, \"Question #\", index + 1), /*#__PURE__*/React.createElement(Field, {\n  name: `${question}.questionName`,\n  type: \"text\",\n  component: renderField,\n  placeholder: \"Question Name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(FieldArray, {\n  name: `${question}.options`,\n  component: renderOptions,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 17\n  }\n}))));\n\nconst renderOptions = ({\n  fields\n}) => /*#__PURE__*/React.createElement(\"ul\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"li\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  onClick: () => fields.push(),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 13\n  }\n}, \"Add Option\")), fields.map((option, index) => /*#__PURE__*/React.createElement(\"li\", {\n  key: index,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"button\", {\n  type: \"button\",\n  title: \"Remove Option\",\n  onClick: () => fields.remove(index),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 17\n  }\n}), /*#__PURE__*/React.createElement(Field, {\n  name: option,\n  type: \"text\",\n  component: renderField,\n  placeholder: `Option #${index + 1}`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 17\n  }\n}))), fields.error && /*#__PURE__*/React.createElement(\"li\", {\n  className: \"error\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 26\n  }\n}, fields.error));\n\nconst PollForm = props => {\n  const {\n    handleSubmit,\n    pristine,\n    reset,\n    submitting\n  } = props;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    name: \"Poll\",\n    type: \"text\",\n    component: renderField,\n    placeholder: \"Poll Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"questions\",\n    component: renderQuestions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: submitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disabled: pristine || submitting,\n    onClick: reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Clear Values\")));\n};\n\nexport default reduxForm({\n  form: 'LoginForm'\n})(PollForm);\n/*import React, { Component } from \"react\";\nimport Button from '../buttons/Button'\nimport {NavLink} from \"react-router-dom\";\n\nconst validate = (state) => {\n    return (state.email.length > 0 && state.password.length >= 6);\n};\n\nclass Login extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n\n            errors: {\n                email: '',\n                password: '',\n            }\n        };\n    }\n\n    handleChange = event => {\n        const {name, value} = event.target;\n        const errors = this.state.errors;\n        const validEmailRegex = RegExp(/(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([\\t]*\\r\\n)?[\\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([\\t]*\\r\\n)?[\\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i);\n\n        switch (name) {\n            case 'email':\n                errors.email = validEmailRegex.test(value) ? '' : <strong>Email is not valid!</strong>;\n                break;\n\n            case 'password':\n                errors.password = (value.length < 6) ? <strong>Your password must be at least 6 characters long!</strong> : '';\n                break;\n\n            default:\n                break;\n        }\n\n        this.setState({ errors, [name]: event.target.value });\n    };\n\n    render() {\n        const isDisabled = !validate(this.state);\n\n        return (\n            <form>\n                <h2>Login</h2>\n\n                <input type=\"text\" class =\"box\" placeholder=\"Enter a valid email\" name = 'email' value={this.state.email} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.email}</div>\n\n                <br/>\n                <input type=\"password\" class =\"box\" placeholder=\"Enter password\" name = 'password' value={this.state.password} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.password}</div>\n\n                <br/>\n                <NavLink to=\"/home\"><Button disabled={isDisabled}>Login</Button></NavLink>\n            </form>\n        );\n    }\n}\n\nexport default Login;*/","map":{"version":3,"sources":["/Users/elizabethnikolaeva/WebstormProjects/frontend/src/components/forms/PollForm.jsx"],"names":["React","Field","FieldArray","reduxForm","email","required","renderField","minLength8","CreatePoll","NavLink","renderQuestions","fields","push","map","question","index","remove","renderOptions","option","error","PollForm","props","handleSubmit","pristine","reset","submitting","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAeC,UAAf,EAA2BC,SAA3B,QAA2C,YAA3C;AACA,SAAQC,KAAR,EAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,UAAtC,QAAuD,kBAAvD;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AAEA;;;;;;;;;;;;;;;;;;;;AAoBA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAQ,EAAA,IAAI,EAAC,QAAb;AAAsB,EAAA,OAAO,EAAE,MAAMA,MAAM,CAACC,IAAP,CAAY,EAAZ,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,EAIKD,MAAM,CAACE,GAAP,CAAW,CAACC,QAAD,EAAWC,KAAX,kBACR;AAAI,EAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AACI,EAAA,IAAI,EAAC,QADT;AAEI,EAAA,KAAK,EAAC,iBAFV;AAGI,EAAA,OAAO,EAAE,MAAMJ,MAAM,CAACK,MAAP,CAAcD,KAAd,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAeA,KAAK,GAAG,CAAvB,CALJ,eAMI,oBAAC,KAAD;AACI,EAAA,IAAI,EAAG,GAAED,QAAS,eADtB;AAEI,EAAA,IAAI,EAAC,MAFT;AAGI,EAAA,SAAS,EAAER,WAHf;AAII,EAAA,WAAW,EAAC,eAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANJ,eAWI,oBAAC,UAAD;AAAY,EAAA,IAAI,EAAG,GAAEQ,QAAS,UAA9B;AAAyC,EAAA,SAAS,EAAEG,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAXJ,CADH,CAJL,CADJ;;AAuBA,MAAMA,aAAa,GAAG,CAAC;AAAEN,EAAAA;AAAF,CAAD,kBAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AAAQ,EAAA,IAAI,EAAC,QAAb;AAAsB,EAAA,OAAO,EAAE,MAAMA,MAAM,CAACC,IAAP,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,EAIKD,MAAM,CAACE,GAAP,CAAW,CAACK,MAAD,EAASH,KAAT,kBACR;AAAI,EAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI;AACI,EAAA,IAAI,EAAC,QADT;AAEI,EAAA,KAAK,EAAC,eAFV;AAGI,EAAA,OAAO,EAAE,MAAMJ,MAAM,CAACK,MAAP,CAAcD,KAAd,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,eAKI,oBAAC,KAAD;AACI,EAAA,IAAI,EAAEG,MADV;AAEI,EAAA,IAAI,EAAC,MAFT;AAGI,EAAA,SAAS,EAAEZ,WAHf;AAII,EAAA,WAAW,EAAG,WAAUS,KAAK,GAAG,CAAE,EAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALJ,CADH,CAJL,EAiBKJ,MAAM,CAACQ,KAAP,iBAAgB;AAAI,EAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAuBR,MAAM,CAACQ,KAA9B,CAjBrB,CADJ;;AAsBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAAgDJ,KAAtD;AACA,sBACI;AAAM,IAAA,QAAQ,EAAEC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,SAAS,EAAEhB,WAA1C;AAAuD,IAAA,WAAW,EAAC,WAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,WAAjB;AAA6B,IAAA,SAAS,EAAEI,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEe,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,QAAQ,EAAEF,QAAQ,IAAIE,UAA5C;AAAwD,IAAA,OAAO,EAAED,KAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CAHJ,CADJ;AAUH,CAZD;;AAcA,eAAerB,SAAS,CAAC;AACrBuB,EAAAA,IAAI,EAAE;AADe,CAAD,CAAT,CAEZN,QAFY,CAAf;AAMA","sourcesContent":["import React from 'react'\nimport {Field, FieldArray, reduxForm} from 'redux-form'\nimport {email, required, renderField, minLength8} from './FormValidation'\nimport CreatePoll from \"../create_poll/CreatePoll\";\nimport {NavLink} from \"react-router-dom\";\n\n/*const LoginForm = (props) => {\n    const { invalid, handleSubmit, pristine, reset, submitting } = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <Field name=\"email\" type=\"email\"\n                   component={renderField} label=\"Email\"\n                   validate={[ required, email]}\n            />\n            <Field name=\"password\" type=\"password\"\n                   component={renderField} label=\"Password\"\n                   validate={[ required, minLength8 ]}\n            />\n            <div>\n                <button type=\"submit\" disabled={invalid || pristine || submitting}>Submit</button>\n                <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values</button>\n            </div>\n        </form>\n    )\n}*/\n\nconst renderQuestions = ({ fields }) => (\n    <ul>\n        <li>\n            <button type=\"button\" onClick={() => fields.push({})}>Add Question</button>\n        </li>\n        {fields.map((question, index) =>\n            <li key={index}>\n                <button\n                    type=\"button\"\n                    title=\"Remove Question\"\n                    onClick={() => fields.remove(index)}/>\n                <h4>Question #{index + 1}</h4>\n                <Field\n                    name={`${question}.questionName`}\n                    type=\"text\"\n                    component={renderField}\n                    placeholder=\"Question Name\"/>\n                <FieldArray name={`${question}.options`} component={renderOptions}/>\n            </li>\n        )}\n    </ul>\n)\n\nconst renderOptions = ({ fields }) => (\n    <ul>\n        <li>\n            <button type=\"button\" onClick={() => fields.push()}>Add Option</button>\n        </li>\n        {fields.map((option, index) =>\n            <li key={index}>\n                <button\n                    type=\"button\"\n                    title=\"Remove Option\"\n                    onClick={() => fields.remove(index)}/>\n                <Field\n                    name={option}\n                    type=\"text\"\n                    component={renderField}\n                    placeholder={`Option #${index + 1}`}/>\n            </li>\n        )}\n        {fields.error && <li className=\"error\">{fields.error}</li>}\n    </ul>\n)\n\nconst PollForm = (props) => {\n    const { handleSubmit, pristine, reset, submitting } = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <Field name=\"Poll\" type=\"text\" component={renderField} placeholder=\"Poll Name\"/>\n            <FieldArray name=\"questions\" component={renderQuestions}/>\n            <div>\n                <button type=\"submit\" disabled={submitting}>Submit</button>\n                <button type=\"button\" disabled={pristine || submitting} onClick={reset}>Clear Values</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({\n    form: 'LoginForm',\n})(PollForm);\n\n\n\n/*import React, { Component } from \"react\";\nimport Button from '../buttons/Button'\nimport {NavLink} from \"react-router-dom\";\n\nconst validate = (state) => {\n    return (state.email.length > 0 && state.password.length >= 6);\n};\n\nclass Login extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n\n            errors: {\n                email: '',\n                password: '',\n            }\n        };\n    }\n\n    handleChange = event => {\n        const {name, value} = event.target;\n        const errors = this.state.errors;\n        const validEmailRegex = RegExp(/(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([\\t]*\\r\\n)?[\\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([\\t]*\\r\\n)?[\\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i);\n\n        switch (name) {\n            case 'email':\n                errors.email = validEmailRegex.test(value) ? '' : <strong>Email is not valid!</strong>;\n                break;\n\n            case 'password':\n                errors.password = (value.length < 6) ? <strong>Your password must be at least 6 characters long!</strong> : '';\n                break;\n\n            default:\n                break;\n        }\n\n        this.setState({ errors, [name]: event.target.value });\n    };\n\n    render() {\n        const isDisabled = !validate(this.state);\n\n        return (\n            <form>\n                <h2>Login</h2>\n\n                <input type=\"text\" class =\"box\" placeholder=\"Enter a valid email\" name = 'email' value={this.state.email} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.email}</div>\n\n                <br/>\n                <input type=\"password\" class =\"box\" placeholder=\"Enter password\" name = 'password' value={this.state.password} onChange={this.handleChange}/>\n                <div class=\"subString\">{this.state.errors.password}</div>\n\n                <br/>\n                <NavLink to=\"/home\"><Button disabled={isDisabled}>Login</Button></NavLink>\n            </form>\n        );\n    }\n}\n\nexport default Login;*/\n\n\n\n"]},"metadata":{},"sourceType":"module"}