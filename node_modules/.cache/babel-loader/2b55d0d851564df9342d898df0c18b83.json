{"ast":null,"code":"var _jsxFileName = \"/Users/elizabethnikolaeva/WebstormProjects/frontend/src/components/create_poll/CreatePoll.js\";\nimport React, { Component } from \"react\";\nimport Button from \"../buttons/Button\";\n\nclass CreatePoll extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: event.target.value\n      });\n    };\n\n    this.state = {\n      poll_name: \"\",\n      question: \"\",\n      options: ['input-0']\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }, \"New Poll\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      class: \"poll_box\",\n      placeholder: \"Enter a poll name\",\n      name: \"poll_name\",\n      value: this.state.poll_name,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"poll_box\",\n      placeholder: \"Enter a question\",\n      name: \"question\",\n      value: this.state.question,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"dynamicInput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, this.state.inputs.map(input => /*#__PURE__*/React.createElement(FormInput, {\n      key: input,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 57\n      }\n    }))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"poll_box\",\n      placeholder: \"Add option\",\n      name: \"option\",\n      value: this.state.option,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: 'checkbox',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.appendInput(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default CreatePoll;","map":{"version":3,"sources":["/Users/elizabethnikolaeva/WebstormProjects/frontend/src/components/create_poll/CreatePoll.js"],"names":["React","Component","Button","CreatePoll","constructor","props","handleChange","event","name","value","target","setState","state","poll_name","question","options","render","inputs","map","input","option","appendInput"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,YAVmB,GAUJC,KAAK,IAAI;AACpB,YAAM;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,UAAgBF,KAAK,CAACG,MAA5B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACH,IAAD,GAAQD,KAAK,CAACG,MAAN,CAAaD;AAAvB,OAAd;AACH,KAbkB;;AAGf,SAAKG,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,OAAO,EAAE,CAAC,SAAD;AAHA,KAAb;AAKH;;AAODC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,UAA1B;AAAqC,MAAA,WAAW,EAAC,mBAAjD;AAAqE,MAAA,IAAI,EAAC,WAA1E;AAAsF,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,SAAxG;AAAmH,MAAA,QAAQ,EAAE,KAAKP,YAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,UAA7B;AAAwC,MAAA,WAAW,EAAC,kBAApD;AAAuE,MAAA,IAAI,EAAC,UAA5E;AAAuF,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWE,QAAzG;AAAmH,MAAA,QAAQ,EAAE,KAAKR,YAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAOI;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKM,KAAL,CAAWK,MAAX,CAAkBC,GAAlB,CAAsBC,KAAK,iBAAI,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B,CADL,CAPJ,eAUI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,UAA7B;AAAwC,MAAA,WAAW,EAAC,YAApD;AAAiE,MAAA,IAAI,EAAC,QAAtE;AAA+E,MAAA,KAAK,EAAE,KAAKP,KAAL,CAAWQ,MAAjG;AAAyG,MAAA,QAAQ,EAAE,KAAKd,YAAxH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,eAYI;AAAQ,MAAA,IAAI,EAAI,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CADJ,eAeI;AAAQ,MAAA,OAAO,EAAG,MAAM,KAAKe,WAAL,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,CADJ;AAoBH;;AArC8B;;AAwCnC,eAAelB,UAAf","sourcesContent":["import React, {Component} from \"react\";\nimport Button from \"../buttons/Button\";\n\nclass CreatePoll extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            poll_name: \"\",\n            question: \"\",\n            options: ['input-0']\n        };\n    }\n\n    handleChange = event => {\n        const {name, value} = event.target;\n        this.setState({ [name]: event.target.value });\n    }\n\n    render() {\n        return (\n            <div>\n                <form>\n                    <h2>New Poll</h2>\n                    <input type=\"text\" class =\"poll_box\" placeholder=\"Enter a poll name\" name='poll_name' value={this.state.poll_name} onChange={this.handleChange}/>\n                    <br/>\n                    <input type=\"text\" className=\"poll_box\" placeholder=\"Enter a question\" name='question' value={this.state.question} onChange={this.handleChange}/>\n\n                    <br/>\n                    <div id=\"dynamicInput\">\n                        {this.state.inputs.map(input => <FormInput key={input} />)}\n                    </div>\n                    <input type=\"text\" className=\"poll_box\" placeholder=\"Add option\" name='option' value={this.state.option} onChange={this.handleChange}/>\n                    <br/>\n                    <button type = {'checkbox'}/>\n                </form>\n                <button onClick={ () => this.appendInput() }>\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default CreatePoll;\n"]},"metadata":{},"sourceType":"module"}